apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    # kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    # nginx.ingress.kubernetes.io/grpc-backend: "true"
  name: goingserver
spec:
  rules:
  - host: localhost.test
    http:
      paths:
      - path: /default
        backend:
          serviceName: goingserver
          servicePort: grpc
  tls:
  - hosts:
      - localhost.test
    secretName: tls-secret

# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
#   name: fortune-ingress
#   namespace: default
# spec:
#   rules:
#   - host: fortune-teller.stack.build
#     http:
#       paths:
#       - backend:
#           serviceName: fortune-teller-service
#           servicePort: grpc
#   tls:
#   # This secret must exist beforehand
#   # The cert must also contain the subj-name fortune-teller.stack.build
#   # https://github.com/kubernetes/ingress-nginx/blob/master/docs/examples/PREREQUISITES.md#tls-certificates
#   - secretName: fortune-teller.stack.build
#     hosts:
#       - fortune-teller.stack.build
